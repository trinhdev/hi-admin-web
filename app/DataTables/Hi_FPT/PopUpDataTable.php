<?php

namespace App\DataTables\Hi_FPT;

use App\DataTables\BuilderDatatables;
use Yajra\DataTables\Html\Column;

class PopUpDataTable extends BuilderDatatables
{
    protected $orderBy = 7;
    public function dataTable($query)
    {
        $list_template_popup = config('platform_config.type_popup_service', '');
        return datatables()
            ->collection($query['data'])
            ->editColumn('titleVi',function($row){
                return '<a onclick="detailPopup(this)" data-id="'.$row->id.'" href="#">'.$row->titleVi.'</a>
                    <div class="row-options">
                        <a href="'.route('popupmanage.view', [$row->id ]).'">Push</a> |
                        <a onclick="detailPopup(this)" data-id="'.$row->id.'" href="#" class="text-info">Edit</a> |
                        <a id="exportPopup" href="#" data-id="'.$row->id.'" class="text-danger">Export</a>
                    </div>';

            })
            ->editColumn('checkbox', function ($row) {
                return '<div class="checkbox"><input type="checkbox" value="'.$row->id.'"><label></label></div>
                ';
            })
            ->editColumn('templateType', function ($query) use ($list_template_popup) {
                return $list_template_popup[$query->templateType] ?? $query;
            })
            ->editColumn('image', function ($query) {
                $url = env('URL_STATIC').'/upload/images/event/'.$query->image;
                return '<img src="'.$url.'"
                            onclick ="window.open(`'.$url.'`)"
                            width="100" height="100"
                        />';
            })
            ->rawColumns(['buttonActionValue', 'image', 'action','buttonImage', 'titleVi', 'checkbox'])
            ->setTotalRecords($query['pagination']->totalPage * $query['pagination']->perPage)
            ->skipPaging();
    }

    public function query()
    {
        return collect($this->data->data) ?? [];
    }

    /**
     * Get columns.
     *
     * @return array
     */
    public function columns(): array
    {
        return [
            Column::make('titleVi')->title('Tiêu đề'),
            Column::make('image')->title('Image')->sortable(false),
            Column::make('buttonActionValue')->title('Nơi điều hướng'),
            Column::make('templateType')->title('Loại template')->width(120),
            Column::make('viewCount')->title('View'),
            Column::make('createdBy')->title('Người tạo')->width(80),
            Column::make('dateCreated')->title('Ngày tạo')
        ];
    }

    public function buttons()
    {
        parent::buttons(); // TODO: Change the autogenerated stub
        $button = [[
            'text'      => 'Tất cả',
            'action'    => "function ( e, dt, node, config ) {
                                    dt.on('preXhr.dt', function(e, settings, data){ data.templateType = ''; });
                                    dt.ajax.reload();
                                }",
            'attr'      =>  [ 'id'=>'']
        ]];
        foreach (config('platform_config.type_popup_service') as $key => $value) {
            $button[] = [
                'text'      => $value,
                'action'    => "function ( e, dt, node, config ) {
                                    dt.on('preXhr.dt', function(e, settings, data){ data.templateType = '$key'; });
                                    dt.ajax.reload();
                                }",
                'attr'      =>  [ 'id'=>$key ]
            ];
        }
        return [
            [
                'extend'=> 'collection',
                'text' =>'Lọc hiển thị',
                'autoClose'=> true,
                'className' => 'btn btn-default btn-sm btn-default-dt-options',
                'buttons'=> $button
            ]
        ];
    }


    /**
     * Get filename for export.
     *
     * @return string
     */
    protected function filename(): string
    {
        return 'Popup_' . date('YmdHis');
    }
}
